# 1 "lexer.mll"
 
open Parser (* The type token is defined in parser.mli *)
exception Eof

# 7 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\226\255\000\000\228\255\229\255\230\255\231\255\232\255\
    \233\255\234\255\001\000\000\000\000\000\001\000\002\000\004\000\
    \017\000\009\000\001\000\002\000\000\000\000\000\001\000\004\000\
    \005\000\023\000\086\000\254\255\255\255\096\000\253\255\003\000\
    \004\000\252\255\239\255\009\000\251\255\016\000\250\255\007\000\
    \249\255\000\000\000\000\000\000\248\255\002\000\247\255\005\000\
    \246\255\001\000\002\000\245\255\015\000\020\000\244\255\235\255\
    \013\000\243\255\013\000\030\000\242\255\046\000\040\000\055\000\
    \241\255\041\000\240\255\238\255\237\255\236\255\227\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\002\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default = 
   "\255\255\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\255\255\000\000\255\255\
    \255\255\000\000\000\000\255\255\000\000\255\255\000\000\255\255\
    \000\000\255\255\255\255\255\255\000\000\255\255\000\000\255\255\
    \000\000\255\255\255\255\000\000\255\255\255\255\000\000\000\000\
    \255\255\000\000\255\255\255\255\000\000\255\255\255\255\255\255\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\028\000\027\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \028\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \009\000\008\000\003\000\000\000\004\000\002\000\000\000\000\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\000\000\005\000\000\000\000\000\070\000\000\000\
    \000\000\000\000\000\000\021\000\049\000\018\000\020\000\047\000\
    \048\000\050\000\000\000\000\000\000\000\000\000\042\000\041\000\
    \046\000\051\000\019\000\043\000\044\000\045\000\000\000\000\000\
    \000\000\000\000\000\000\007\000\000\000\006\000\000\000\000\000\
    \000\000\025\000\017\000\061\000\022\000\011\000\014\000\034\000\
    \033\000\016\000\039\000\036\000\010\000\023\000\013\000\012\000\
    \065\000\068\000\067\000\024\000\015\000\069\000\058\000\055\000\
    \052\000\037\000\035\000\032\000\038\000\040\000\053\000\056\000\
    \054\000\057\000\059\000\060\000\029\000\031\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\062\000\063\000\064\000\066\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\255\255\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\255\255\255\255\002\000\255\255\
    \255\255\255\255\255\255\000\000\018\000\000\000\000\000\019\000\
    \047\000\049\000\255\255\255\255\255\255\255\255\041\000\021\000\
    \045\000\050\000\000\000\042\000\043\000\020\000\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\255\255\
    \255\255\000\000\000\000\014\000\000\000\000\000\000\000\031\000\
    \032\000\000\000\022\000\035\000\000\000\000\000\000\000\000\000\
    \013\000\011\000\012\000\000\000\000\000\010\000\015\000\016\000\
    \017\000\023\000\024\000\025\000\037\000\039\000\052\000\016\000\
    \053\000\056\000\058\000\059\000\026\000\025\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\061\000\062\000\063\000\065\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 6 "lexer.mll"
           ( token lexbuf )
# 152 "lexer.ml"

  | 1 ->
# 7 "lexer.mll"
          ( EOL )
# 157 "lexer.ml"

  | 2 ->
let
# 8 "lexer.mll"
                               lxm
# 163 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 8 "lexer.mll"
                                   ( NUM(int_of_string lxm) )
# 167 "lexer.ml"

  | 3 ->
# 9 "lexer.mll"
        ( PLUS )
# 172 "lexer.ml"

  | 4 ->
# 10 "lexer.mll"
        ( MINUS )
# 177 "lexer.ml"

  | 5 ->
# 11 "lexer.mll"
        ( TIMES )
# 182 "lexer.ml"

  | 6 ->
# 12 "lexer.mll"
        ( DIV )
# 187 "lexer.ml"

  | 7 ->
# 14 "lexer.mll"
           ( CONSTANT )
# 192 "lexer.ml"

  | 8 ->
# 15 "lexer.mll"
         ( FUNCTION )
# 197 "lexer.ml"

  | 9 ->
# 16 "lexer.mll"
         ( RECURSION )
# 202 "lexer.ml"

  | 10 ->
# 17 "lexer.mll"
          ( ECHO )
# 207 "lexer.ml"

  | 11 ->
# 18 "lexer.mll"
          ( BOOL )
# 212 "lexer.ml"

  | 12 ->
# 19 "lexer.mll"
         ( INT )
# 217 "lexer.ml"

  | 13 ->
# 20 "lexer.mll"
          ( TRUE )
# 222 "lexer.ml"

  | 14 ->
# 21 "lexer.mll"
           ( FALSE )
# 227 "lexer.ml"

  | 15 ->
# 22 "lexer.mll"
         ( NOT )
# 232 "lexer.ml"

  | 16 ->
# 23 "lexer.mll"
         ( AND )
# 237 "lexer.ml"

  | 17 ->
# 24 "lexer.mll"
        ( OR )
# 242 "lexer.ml"

  | 18 ->
# 25 "lexer.mll"
        ( EQ )
# 247 "lexer.ml"

  | 19 ->
# 26 "lexer.mll"
        ( LT )
# 252 "lexer.ml"

  | 20 ->
# 27 "lexer.mll"
        ( IF )
# 257 "lexer.ml"

  | 21 ->
# 29 "lexer.mll"
      ( LPAR )
# 262 "lexer.ml"

  | 22 ->
# 30 "lexer.mll"
      ( RPAR )
# 267 "lexer.ml"

  | 23 ->
# 32 "lexer.mll"
      ( LBRAC )
# 272 "lexer.ml"

  | 24 ->
# 33 "lexer.mll"
      ( RBRAC )
# 277 "lexer.ml"

  | 25 ->
# 34 "lexer.mll"
      ( SEMICOL )
# 282 "lexer.ml"

  | 26 ->
# 35 "lexer.mll"
      ( COMMA )
# 287 "lexer.ml"

  | 27 ->
# 36 "lexer.mll"
      ( STAR )
# 292 "lexer.ml"

  | 28 ->
# 37 "lexer.mll"
       ( FLECHE )
# 297 "lexer.ml"

  | 29 ->
# 39 "lexer.mll"
      ( raise Eof )
# 302 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

